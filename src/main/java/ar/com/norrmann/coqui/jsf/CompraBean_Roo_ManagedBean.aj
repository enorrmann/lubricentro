// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.coqui.jsf;

import ar.com.norrmann.coqui.jsf.CompraBean;
import ar.com.norrmann.coqui.model.Compra;
import ar.com.norrmann.coqui.model.DetalleCompra;
import ar.com.norrmann.coqui.model.Proveedor;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlPanelGrid;
import org.primefaces.event.CloseEvent;

privileged aspect CompraBean_Roo_ManagedBean {
    
    declare @type: CompraBean: @ManagedBean(name = "compraBean");
    
    declare @type: CompraBean: @SessionScoped;
    
    private String CompraBean.name = "Compras";
    
    private List<Compra> CompraBean.allCompras;
    
    private boolean CompraBean.dataVisible = false;
    
    private List<String> CompraBean.columns;
    
    private HtmlPanelGrid CompraBean.createPanelGrid;
    
    private HtmlPanelGrid CompraBean.editPanelGrid;
    
    private HtmlPanelGrid CompraBean.viewPanelGrid;
    
    private boolean CompraBean.createDialogVisible = false;
    
    private List<DetalleCompra> CompraBean.selectedDetalleList;
    
    @PostConstruct
    public void CompraBean.init() {
        columns = new ArrayList<String>();
        columns.add("fechaCompra");
    }
    
    public String CompraBean.getName() {
        return name;
    }
    
    public List<String> CompraBean.getColumns() {
        return columns;
    }
    
    public List<Compra> CompraBean.getAllCompras() {
        return allCompras;
    }
    
    public void CompraBean.setAllCompras(List<Compra> allCompras) {
        this.allCompras = allCompras;
    }
    
    public String CompraBean.findAllCompras() {
        allCompras = Compra.findAllCompras();
        dataVisible = !allCompras.isEmpty();
        return null;
    }
    
    public boolean CompraBean.isDataVisible() {
        return dataVisible;
    }
    
    public void CompraBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid CompraBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void CompraBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid CompraBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void CompraBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid CompraBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void CompraBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public List<DetalleCompra> CompraBean.getSelectedDetalleList() {
        return selectedDetalleList;
    }
    
    public void CompraBean.setSelectedDetalleList(List<DetalleCompra> selectedDetalleList) {
        if (selectedDetalleList != null) {
            compra.setDetalleList(new HashSet<DetalleCompra>(selectedDetalleList));
        }
        this.selectedDetalleList = selectedDetalleList;
    }
    
    public List<Proveedor> CompraBean.completeProveedor(String query) {
        List<Proveedor> suggestions = new ArrayList<Proveedor>();
        for (Proveedor proveedor : Proveedor.findAllProveedors()) {
            String proveedorStr = String.valueOf(proveedor.getNombre());
            if (proveedorStr.toLowerCase().startsWith(query.toLowerCase())) {
                suggestions.add(proveedor);
            }
        }
        return suggestions;
    }
    
    public boolean CompraBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void CompraBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String CompraBean.displayList() {
        createDialogVisible = false;
        findAllCompras();
        return "compra";
    }
    
    public String CompraBean.displayCreateDialog() {
        compra = new Compra();
        createDialogVisible = true;
        return "compra";
    }
    
    public void CompraBean.reset() {
        compra = null;
        selectedDetalleList = null;
        createDialogVisible = false;
    }
    
    public void CompraBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
